{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Edeki Okoh1\\\\Desktop\\\\Modellytics\\\\Mobile\\\\EyeQ\\\\node_modules\\\\react-navigation-tabs\\\\src\\\\views\\\\CrossFadeIcon.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar TabBarIcon = function (_React$Component) {\n  _inherits(TabBarIcon, _React$Component);\n\n  var _super = _createSuper(TabBarIcon);\n\n  function TabBarIcon() {\n    _classCallCheck(this, TabBarIcon);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabBarIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          route = _this$props.route,\n          activeOpacity = _this$props.activeOpacity,\n          inactiveOpacity = _this$props.inactiveOpacity,\n          activeTintColor = _this$props.activeTintColor,\n          inactiveTintColor = _this$props.inactiveTintColor,\n          renderIcon = _this$props.renderIcon,\n          horizontal = _this$props.horizontal,\n          style = _this$props.style;\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.icon, {\n          opacity: activeOpacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, renderIcon({\n        route: route,\n        focused: true,\n        horizontal: horizontal,\n        tintColor: activeTintColor\n      })), React.createElement(Animated.View, {\n        style: [styles.icon, {\n          opacity: inactiveOpacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, renderIcon({\n        route: route,\n        focused: false,\n        horizontal: horizontal,\n        tintColor: inactiveTintColor\n      })));\n    }\n  }]);\n\n  return TabBarIcon;\n}(React.Component);\n\nexport { TabBarIcon as default };\nvar styles = StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/Edeki Okoh1/Desktop/Modellytics/Mobile/EyeQ/node_modules/react-navigation-tabs/src/views/CrossFadeIcon.js"],"names":["React","TabBarIcon","props","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","horizontal","style","styles","icon","opacity","focused","tintColor","Component","StyleSheet","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":";;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;;;IAcqBC,U;;;;;;;;;;;;;6BACV;AAAA,wBAUH,KAAKC,KAVF;AAAA,UAELC,KAFK,eAELA,KAFK;AAAA,UAGLC,aAHK,eAGLA,aAHK;AAAA,UAILC,eAJK,eAILA,eAJK;AAAA,UAKLC,eALK,eAKLA,eALK;AAAA,UAMLC,iBANK,eAMLA,iBANK;AAAA,UAOLC,UAPK,eAOLA,UAPK;AAAA,UAQLC,UARK,eAQLA,UARK;AAAA,UASLC,KATK,eASLA,KATK;AAcP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;AAAEC,UAAAA,OAAO,EAAET;AAAX,SAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,UAAU,CAAC;AACVL,QAAAA,KAAK,EAALA,KADU;AAEVW,QAAAA,OAAO,EAAE,IAFC;AAGVL,QAAAA,UAAU,EAAVA,UAHU;AAIVM,QAAAA,SAAS,EAAET;AAJD,OAAD,CADb,CADF,EASE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACK,MAAM,CAACC,IAAR,EAAc;AAAEC,UAAAA,OAAO,EAAER;AAAX,SAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,UAAU,CAAC;AACVL,QAAAA,KAAK,EAALA,KADU;AAEVW,QAAAA,OAAO,EAAE,KAFC;AAGVL,QAAAA,UAAU,EAAVA,UAHU;AAIVM,QAAAA,SAAS,EAAER;AAJD,OAAD,CADb,CATF,CADF;AAoBD;;;;EAnCqCP,KAAK,CAACgB,S;;SAAzBf,U;AAsCrB,IAAMU,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,IAAI,EAAE;AAIJO,IAAAA,QAAQ,EAAE,UAJN;AAKJC,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,MAAM,EAAE,MARJ;AASJC,IAAAA,KAAK,EAAE,MATH;AAWJC,IAAAA,QAAQ,EAAE;AAXN;AADyB,CAAlB,CAAf","sourcesContent":["/* @flow */\r\n\r\nimport React from 'react';\r\nimport { Animated, View, StyleSheet } from 'react-native';\r\n\r\ntype Props = {\r\n  route: any,\r\n  horizontal?: boolean,\r\n  activeOpacity: any,\r\n  inactiveOpacity: any,\r\n  activeTintColor: any,\r\n  inactiveTintColor: any,\r\n  renderIcon: any,\r\n  style: any,\r\n};\r\n\r\nexport default class TabBarIcon extends React.Component<Props> {\r\n  render() {\r\n    const {\r\n      route,\r\n      activeOpacity,\r\n      inactiveOpacity,\r\n      activeTintColor,\r\n      inactiveTintColor,\r\n      renderIcon,\r\n      horizontal,\r\n      style,\r\n    } = this.props;\r\n\r\n    // We render the icon twice at the same position on top of each other:\r\n    // active and inactive one, so we can fade between them.\r\n    return (\r\n      <View style={style}>\r\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\r\n          {renderIcon({\r\n            route,\r\n            focused: true,\r\n            horizontal,\r\n            tintColor: activeTintColor,\r\n          })}\r\n        </Animated.View>\r\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\r\n          {renderIcon({\r\n            route,\r\n            focused: false,\r\n            horizontal,\r\n            tintColor: inactiveTintColor,\r\n          })}\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    // We render the icon twice at the same position on top of each other:\r\n    // active and inactive one, so we can fade between them:\r\n    // Cover the whole iconContainer:\r\n    position: 'absolute',\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n    // Workaround for react-native >= 0.54 layout bug\r\n    minWidth: 25,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}