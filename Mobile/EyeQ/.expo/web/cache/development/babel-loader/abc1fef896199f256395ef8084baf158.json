{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Edeki Okoh1\\\\Desktop\\\\Modellytics\\\\Mobile\\\\EyeQ\\\\node_modules\\\\react-native-tab-view\\\\src\\\\TouchableItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nvar LOLLIPOP = 21;\n\nvar TouchableItem = function (_React$Component) {\n  _inherits(TouchableItem, _React$Component);\n\n  var _super = _createSuper(TouchableItem);\n\n  function TouchableItem() {\n    _classCallCheck(this, TouchableItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TouchableItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          pressOpacity = _this$props.pressOpacity,\n          pressColor = _this$props.pressColor,\n          borderless = _this$props.borderless,\n          rest = _objectWithoutProperties(_this$props, [\"style\", \"pressOpacity\", \"pressColor\", \"borderless\"]);\n\n      if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n        return React.createElement(TouchableNativeFeedback, _extends({}, rest, {\n          background: TouchableNativeFeedback.Ripple(pressColor, borderless),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        }), React.createElement(View, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        }, React.Children.only(this.props.children)));\n      } else {\n        return React.createElement(TouchableOpacity, _extends({}, rest, {\n          rejectResponderTermination: true,\n          style: style,\n          activeOpacity: pressOpacity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }), this.props.children);\n      }\n    }\n  }]);\n\n  return TouchableItem;\n}(React.Component);\n\nTouchableItem.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  delayPressIn: PropTypes.number,\n  borderless: PropTypes.bool,\n  pressColor: PropTypes.string,\n  pressOpacity: PropTypes.number,\n  children: PropTypes.node.isRequired\n};\nTouchableItem.defaultProps = {\n  pressColor: 'rgba(255, 255, 255, .4)'\n};\nexport { TouchableItem as default };","map":{"version":3,"sources":["C:/Users/Edeki Okoh1/Desktop/Modellytics/Mobile/EyeQ/node_modules/react-native-tab-view/src/TouchableItem.js"],"names":["React","PropTypes","LOLLIPOP","TouchableItem","props","style","pressOpacity","pressColor","borderless","rest","Platform","OS","Version","TouchableNativeFeedback","Ripple","Children","only","children","Component","propTypes","onPress","func","isRequired","delayPressIn","number","bool","string","node","defaultProps"],"mappings":";;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AASA,IAAMC,QAAQ,GAAG,EAAjB;;IAYqBC,a;;;;;;;;;;;;;6BAcV;AAAA,wBAC0D,KAAKC,KAD/D;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,YADR,eACQA,YADR;AAAA,UACsBC,UADtB,eACsBA,UADtB;AAAA,UACkCC,UADlC,eACkCA,UADlC;AAAA,UACiDC,IADjD;;AAGP,UAAIC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BD,QAAQ,CAACE,OAAT,IAAoBV,QAArD,EAA+D;AAC7D,eACE,oBAAC,uBAAD,eACMO,IADN;AAEE,UAAA,UAAU,EAAEI,uBAAuB,CAACC,MAAxB,CAA+BP,UAA/B,EAA2CC,UAA3C,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBL,KAAK,CAACe,QAAN,CAAeC,IAAf,CAAoB,KAAKZ,KAAL,CAAWa,QAA/B,CAArB,CAJF,CADF;AAQD,OATD,MASO;AACL,eACE,oBAAC,gBAAD,eACMR,IADN;AAEE,UAAA,0BAA0B,MAF5B;AAGE,UAAA,KAAK,EAAEJ,KAHT;AAIE,UAAA,aAAa,EAAEC,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMG,KAAKF,KAAL,CAAWa,QANd,CADF;AAUD;AACF;;;;EAtCwCjB,KAAK,CAACkB,S;;AAA5Bf,a,CACZgB,S,GAAY;AACjBC,EAAAA,OAAO,EAAEnB,SAAS,CAACoB,IAAV,CAAeC,UADP;AAEjBC,EAAAA,YAAY,EAAEtB,SAAS,CAACuB,MAFP;AAGjBhB,EAAAA,UAAU,EAAEP,SAAS,CAACwB,IAHL;AAIjBlB,EAAAA,UAAU,EAAEN,SAAS,CAACyB,MAJL;AAKjBpB,EAAAA,YAAY,EAAEL,SAAS,CAACuB,MALP;AAMjBP,EAAAA,QAAQ,EAAEhB,SAAS,CAAC0B,IAAV,CAAeL;AANR,C;AADAnB,a,CAUZyB,Y,GAAe;AACpBrB,EAAAA,UAAU,EAAE;AADQ,C;SAVHJ,a","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  TouchableNativeFeedback,\r\n  TouchableOpacity,\r\n  Platform,\r\n  View,\r\n} from 'react-native';\r\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\r\n\r\nconst LOLLIPOP = 21;\r\n\r\ntype Props = {\r\n  onPress: () => mixed,\r\n  delayPressIn?: number,\r\n  borderless?: boolean,\r\n  pressColor?: string,\r\n  pressOpacity?: number,\r\n  children?: React.Node,\r\n  style?: ViewStyleProp,\r\n};\r\n\r\nexport default class TouchableItem extends React.Component<Props> {\r\n  static propTypes = {\r\n    onPress: PropTypes.func.isRequired,\r\n    delayPressIn: PropTypes.number,\r\n    borderless: PropTypes.bool,\r\n    pressColor: PropTypes.string,\r\n    pressOpacity: PropTypes.number,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    pressColor: 'rgba(255, 255, 255, .4)',\r\n  };\r\n\r\n  render() {\r\n    const { style, pressOpacity, pressColor, borderless, ...rest } = this.props;\r\n\r\n    if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\r\n      return (\r\n        <TouchableNativeFeedback\r\n          {...rest}\r\n          background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\r\n        >\r\n          <View style={style}>{React.Children.only(this.props.children)}</View>\r\n        </TouchableNativeFeedback>\r\n      );\r\n    } else {\r\n      return (\r\n        <TouchableOpacity\r\n          {...rest}\r\n          rejectResponderTermination\r\n          style={style}\r\n          activeOpacity={pressOpacity}\r\n        >\r\n          {this.props.children}\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}